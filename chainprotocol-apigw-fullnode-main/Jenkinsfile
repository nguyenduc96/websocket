pipeline {
  agent any
  environment {
    IMAGE_REPO_NAME = "chainptc-dev-apigw"
    AWS_ACCOUNT_ID = "457032630484"
    AWS_DEFAULT_REGION = "eu-west-1"
  }

  stages {
    stage('Pre Build') { 
      steps {
        script {
        sh 'echo Prebuild command'
        sh 'echo IMAGE_REPO_NAME $IMAGE_REPO_NAME'
        sh 'echo AWS_ACCOUNT_ID $AWS_ACCOUNT_ID'
        sh 'echo AWS_DEFAULT_REGION $AWS_DEFAULT_REGION'
        sh 'echo Logging in to Amazon ECR...'
        sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
        }
      }
    }
    stage('Build') { 
      steps {
        script {
        sh 'echo Start build ...'
        env.COMMIT_HASH = sh(script:'git rev-parse --short=8 HEAD', returnStdout: true).trim()
        env.REPOSITORY_URI= sh(script: 'echo $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME', returnStdout: true).trim()
        sh 'echo $COMMIT_HASH'
        sh 'echo Build started on `date`'
        sh 'echo Building the Docker image...'
        sh 'docker build -t $REPOSITORY_URI:latest .'
        sh 'docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$COMMIT_HASH'
        sh 'echo Build completed on `date`'
        sh 'echo Pushing the Docker image...'
        sh "docker push ${REPOSITORY_URI}:latest"
        sh "docker push ${REPOSITORY_URI}:${COMMIT_HASH}"  
        }
      }
    }
    stage('Post build') { 
      steps {
        sh 'echo Build done!'
      }
    }
  }
  // post {
  //   always {
  //     archiveArtifacts artifacts: '*_imagedefinitions.json'
  //   }
  // }
}

